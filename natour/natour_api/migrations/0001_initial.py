# Generated by Django 5.1.5 on 2025-01-19 10:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(3)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cpf', models.CharField(max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11)])),
                ('date_of_birth', models.DateField()),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.RegexValidator(message="O n√∫mero de telefone deve estar no formato '+55DDXXXXXXXXX' ou '+55DDXXXXXXXX'.", regex='^\\+55\\d{2}(?:9\\d{8}|\\d{8})$')])),
                ('password', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(8)])),
                ('photo', models.ImageField(default='Images/doc.jpg', upload_to='Images/')),
                ('role', models.CharField(choices=[('master', 'Master'), ('user', 'User')], default='user', max_length=100)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-createdAt'],
            },
        ),
    ]
